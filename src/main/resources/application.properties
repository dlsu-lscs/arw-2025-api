spring.application.name=arw-2025-api
server.port=8080
server.forward-headers-strategy=native

# Google OAuth2
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.providers.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.providers.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.providers.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

# App Properties
# This is the URL of YOUR FRONTEND APPLICATION that the user will be redirected to after a successful login.
# The backend will append the JWTs as secure cookies before redirecting.
# NOTE: The redirect URI for the Google Cloud Console should be http://localhost:8080/login/oauth2/code/google
app.oauth2.redirect-uri=${FRONTEND_REDIRECT_URI}

# JWT Properties
app.jwt.secret=${JWT_SECRET}
app.jwt.access-token-expiration-ms=900000
app.jwt.refresh-token-expiration-ms=604800000

# MySQL Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/arw-2025}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

# HikariCP Connection Pool Settings
spring.datasource.hikari.maximum-pool-size=30
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=20000


# Flyway Configuration
# By default, Flyway will scan `classpath:db/migration`.
# To load mock data for development, activate the `dev` profile.
flyway.url=${spring.datasource.url}
flyway.user=${spring.datasource.username}
flyway.password=${spring.datasource.password}
spring.flyway.locations=classpath:db/migration

# Logging
logging.level.org.springframework.security=INFO
logging.level.org.hibernate.SQL=INFO

# Actuator Configuration
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# OpenAPI (Swagger) Configuration
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
springdoc.packagesToScan=org.dlsulscs.arw
springdoc.pathsToMatch=/api/**
